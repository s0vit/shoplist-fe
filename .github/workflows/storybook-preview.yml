name: Deploy Preview
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  PROJECTS_ROOT: 'itbalis-projects'

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
  push:
    branches-ignore:
      - main

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Build App and Storybook
        run: |
          pnpm build
          pnpm build-storybook
          
          # Создаем временную директорию для деплоя Storybook
          mkdir -p .vercel-storybook
          cp -r storybook-static/* .vercel-storybook/
          
          # Создаем vercel.json для Storybook
          cat > .vercel-storybook/vercel.json << EOF
          {
            "\$schema": "https://openapi.vercel.sh/vercel.json",
            "framework": null,
            "outputDirectory": "."
          }
          EOF

      - name: Pull Vercel Environment Information
        run: |
          # Pull main project environment
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          
          # Link Storybook project
          cd .vercel-storybook
          vercel link --yes --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ secrets.VERCEL_ORG_ID }} --project=budgy-vercel

      - name: Deploy to Vercel
        run: |
          # Sanitize branch name and create final name
          sanitized_ref_name=$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9-]//g' | cut -c1-40)
          unique_suffix=$(echo ${{ github.sha }} | cut -c1-8)
          final_name="${sanitized_ref_name}-${unique_suffix}"
          
          # Deploy main app
          DEPLOY_URL=$(vercel deploy --yes --token=${{ secrets.VERCEL_TOKEN }})
          app_alias="${final_name}.${PROJECTS_ROOT}.vercel.app"
          vercel alias set "$DEPLOY_URL" "$app_alias" --token=${{ secrets.VERCEL_TOKEN }}
          
          # Deploy Storybook
          cd .vercel-storybook
          STORYBOOK_DEPLOY_URL=$(vercel deploy --yes --token=${{ secrets.VERCEL_TOKEN }})
          storybook_alias="storybook.${final_name}.${PROJECTS_ROOT}.vercel.app"
          vercel alias set "$STORYBOOK_DEPLOY_URL" "$storybook_alias" --token=${{ secrets.VERCEL_TOKEN }}
          
          echo "🚀 Preview deployed" >> $GITHUB_STEP_SUMMARY
          echo "App URL: https://${app_alias}" >> $GITHUB_STEP_SUMMARY
          echo "Storybook URL: https://${storybook_alias}" >> $GITHUB_STEP_SUMMARY