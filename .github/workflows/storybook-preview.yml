name: Storybook Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  PROJECTS_ROOT: 'itbalis-projects'

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
  push:
    branches-ignore:
      - main

jobs:
  build-storybook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check PR Description for Issue Link
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_BODY=$(curl -s -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} | jq -r .body)
          ISSUE_NUMBER=$(echo "$PR_BODY" | grep -oP '#\K[0-9]+' || echo "")

          echo "Issue Number: $ISSUE_NUMBER"
          if [ -z "$ISSUE_NUMBER" ]; then
            echo ":name_badge: Pull request description must contain a link to an issue (e.g., #123)." >> $GITHUB_STEP_SUMMARY
            echo "Error: Pull request description must contain a link to an issue (e.g., #123)." >&2
            exit 1
          fi

          ISSUE_DATA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER)
          ISSUE_HTML_URL=$(echo "$ISSUE_DATA" | jq -r .html_url)
          EXPECTED_URL="https://github.com/${{ github.repository }}/issues/$ISSUE_NUMBER"

          if [ "$ISSUE_HTML_URL" != "$EXPECTED_URL" ]; then
            echo ":name_badge: The issue linked in the pull request description does not belong to this repository." >> $GITHUB_STEP_SUMMARY
            echo "Error: The issue linked in the pull request description does not belong to this repository." >&2
            exit 1
          fi

          ISSUE_STATE=$(echo "$ISSUE_DATA" | jq -r .state)
          if [ "$ISSUE_STATE" == "closed" ]; then
            echo ":name_badge: The issue linked in the pull request description is closed." >> $GITHUB_STEP_SUMMARY
            echo "Error: The issue linked in the pull request description is closed." >&2
            exit 1
          fi

          echo "Pull request description contains a valid link to an open issue in this repository."

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-20-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-20-

      - name: Install dependencies
        run: pnpm install

      - name: Build Storybook
        run: pnpm build-storybook

      - name: Archive storybook build
        uses: actions/upload-artifact@v4
        with:
          name: storybook-build
          path: storybook-static

  remove-previous-deployments:
    runs-on: ubuntu-latest
    needs: build-storybook
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Check and Remove Previous Deployments
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          sanitized_ref_name=$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9-]//g' | cut -c1-60)
          META_TAG=$(echo -n $sanitized_ref_name | md5sum | awk '{print $1}')
          bash ./scripts/delete-deployment-preview.sh

  deploy-storybook-preview:
    needs: build-storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: List available artifacts
        run: ls -la

      - name: Download storybook build
        uses: actions/download-artifact@v4
        with:
          name: storybook-build
          path: storybook-static

      - name: Debug downloaded artifact
        run: ls -la storybook-static

      - name: Deploy to Vercel and set custom alias
        env:
          META_TAG: ${{ github.sha }}-${{ github.run_number }}
        run: |
          sanitized_ref_name=$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9-]//g' | cut -c1-40)
          unique_suffix=$(echo ${{ github.sha }} | cut -c1-8)
          final_name="${sanitized_ref_name}-${unique_suffix}"
          
          vercel deploy storybook-static --name=${final_name} --token=${{ secrets.VERCEL_TOKEN }} \
            --meta base_hash=${{ env.META_TAG }} >> vercel_output.txt 2>&1
          
          alias="storybook-ui-${final_name}.${PROJECTS_ROOT}.vercel.app"
          vercel alias set $(grep -oP 'Preview: \K(https://[^\s]+)' vercel_output.txt) $alias \
            --token=${{ secrets.VERCEL_TOKEN }}

      - name: Send Telegram notification
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          to: ${{ secrets.TELEGRAM_TO }}
          format: html
          disable_notification: true
          message: |
            ðŸŽ¨ <b>Storybook Preview ready for design review</b>
            
            PR: <a href="${{ github.event.pull_request.html_url }}">#${{ github.event.pull_request.number }}</a> - ${{ github.event.pull_request.title }}
            Branch: <code>${{ github.head_ref || github.ref_name }}</code>
            Preview: https://storybook-ui-$(echo ${{ github.head_ref || github.ref_name }} | sed 's/[^a-zA-Z0-9-]//g' | cut -c1-40)-$(echo ${{ github.sha }} | cut -c1-8).${{ env.PROJECTS_ROOT }}.vercel.app

      - name: Extract URLs and add to summary
        run: |
          sanitized_ref_name=$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9-]//g' | cut -c1-40)
          unique_suffix=$(echo ${{ github.sha }} | cut -c1-8)
          final_name="${sanitized_ref_name}-${unique_suffix}"
          alias="https://storybook-ui-${final_name}.${PROJECTS_ROOT}.vercel.app"
          INSPECT_URL=$(grep -oP 'Inspect: \K(https://[^\s]+)' vercel_output.txt || echo "Not Found")
          PREVIEW_URL=$(grep -oP 'Preview: \K(https://[^\s]+)' vercel_output.txt || echo "Not Found")
          
          echo "ðŸŽ¨ Storybook Preview deployed" >> $GITHUB_STEP_SUMMARY
          echo ":white_check_mark: Storybook URL: ${alias}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "PR: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "Branch: ${{ github.head_ref || github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Tech links: =========================================================" >> $GITHUB_STEP_SUMMARY
          echo "Inspect URL: ${INSPECT_URL}" >> $GITHUB_STEP_SUMMARY
          echo "Preview URL: ${PREVIEW_URL}" >> $GITHUB_STEP_SUMMARY
